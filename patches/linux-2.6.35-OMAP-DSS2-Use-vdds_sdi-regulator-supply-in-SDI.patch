diff -rupN linux-2.6.34.orig/drivers/video/omap2/dss/core.c linux-2.6.34/drivers/video/omap2/dss/core.c
--- linux-2.6.34.orig/drivers/video/omap2/dss/core.c	2010-06-01 21:32:25.491350316 +0930
+++ linux-2.6.34/drivers/video/omap2/dss/core.c	2010-06-01 21:32:48.743354755 +0930
@@ -548,7 +548,7 @@ static int omap_dss_probe(struct platfor
 #endif
 	if (cpu_is_omap34xx()) {
 #ifdef CONFIG_OMAP2_DSS_SDI
-		r = sdi_init(skip_init);
+		r = sdi_init(pdev, skip_init);
 		if (r) {
 			DSSERR("Failed to initialize SDI\n");
 			goto fail0;
diff -rupN linux-2.6.34.orig/drivers/video/omap2/dss/dss.h linux-2.6.34/drivers/video/omap2/dss/dss.h
--- linux-2.6.34.orig/drivers/video/omap2/dss/dss.h	2010-06-01 21:23:45.539353922 +0930
+++ linux-2.6.34/drivers/video/omap2/dss/dss.h	2010-06-01 21:32:48.743354755 +0930
@@ -242,7 +242,7 @@ int dss_calc_clock_div(bool is_tft, unsi
 		struct dispc_clock_info *dispc_cinfo);
 
 /* SDI */
-int sdi_init(bool skip_init);
+int sdi_init(struct platform_device *pdev, bool skip_init);
 void sdi_exit(void);
 int sdi_init_display(struct omap_dss_device *display);
 
diff -rupN linux-2.6.34.orig/drivers/video/omap2/dss/sdi.c linux-2.6.34/drivers/video/omap2/dss/sdi.c
--- linux-2.6.34.orig/drivers/video/omap2/dss/sdi.c	2010-06-01 21:23:45.567355998 +0930
+++ linux-2.6.34/drivers/video/omap2/dss/sdi.c	2010-06-01 21:32:48.747352093 +0930
@@ -23,6 +23,8 @@
 #include <linux/clk.h>
 #include <linux/delay.h>
 #include <linux/err.h>
+#include <linux/platform_device.h>
+#include <linux/regulator/consumer.h>
 
 #include <plat/display.h>
 #include "dss.h"
@@ -30,6 +32,7 @@
 static struct {
 	bool skip_init;
 	bool update_enabled;
+	struct regulator *vdds_sdi_reg;
 } sdi;
 
 static void sdi_basic_init(void)
@@ -57,6 +60,10 @@ int omapdss_sdi_display_enable(struct om
 		goto err0;
 	}
 
+	r = regulator_enable(sdi.vdds_sdi_reg);
+	if (r)
+		goto err1;
+
 	/* In case of skip_init sdi_init has already enabled the clocks */
 	if (!sdi.skip_init)
 		dss_clk_enable(DSS_CLK_ICK | DSS_CLK_FCK1);
@@ -128,6 +135,7 @@ err3:
 	dssdev->manager->disable(dssdev->manager);
 err2:
 	dss_clk_disable(DSS_CLK_ICK | DSS_CLK_FCK1);
+	regulator_disable(sdi.vdds_sdi_reg);
 err1:
 	omap_dss_stop_device(dssdev);
 err0:
@@ -146,6 +154,8 @@ void omapdss_sdi_display_disable(struct 
 
 	dss_clk_disable(DSS_CLK_ICK | DSS_CLK_FCK1);
 
+	regulator_disable(sdi.vdds_sdi_reg);
+
 	omap_dss_stop_device(dssdev);
 }
 EXPORT_SYMBOL(omapdss_sdi_display_disable);
@@ -157,11 +167,16 @@ int sdi_init_display(struct omap_dss_dev
 	return 0;
 }
 
-int sdi_init(bool skip_init)
+int sdi_init(struct platform_device *pdev, bool skip_init)
 {
 	/* we store this for first display enable, then clear it */
 	sdi.skip_init = skip_init;
 
+	sdi.vdds_sdi_reg = regulator_get(&pdev->dev, "vdds_sdi");
+	if (IS_ERR(sdi.vdds_sdi_reg)) {
+		DSSERR("can't get VDDS_SDI regulator\n");
+		return PTR_ERR(sdi.vdds_sdi_reg);
+	}
 	/*
 	 * Enable clocks already here, otherwise there would be a toggle
 	 * of them until sdi_display_enable is called.
