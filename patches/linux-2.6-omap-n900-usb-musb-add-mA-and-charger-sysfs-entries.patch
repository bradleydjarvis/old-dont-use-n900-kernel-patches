diff -rupN linux-2.6.34.orig/drivers/usb/musb/musb_core.c linux-2.6.34/drivers/usb/musb/musb_core.c
--- linux-2.6.34.orig/drivers/usb/musb/musb_core.c	2010-06-01 21:23:43.283349619 +0930
+++ linux-2.6.34/drivers/usb/musb/musb_core.c	2010-06-02 00:21:20.067358651 +0930
@@ -1714,6 +1714,27 @@ musb_vbus_show(struct device *dev, struc
 }
 static DEVICE_ATTR(vbus, 0644, musb_vbus_show, musb_vbus_store);
 
+static ssize_t
+musb_ma_show(struct device *dev, struct device_attribute *attr, char *buf)
+{
+	struct musb	*musb = dev_to_musb(dev);
+
+	return snprintf(buf, PAGE_SIZE, "%d\n", musb->power_draw);
+}
+static DEVICE_ATTR(mA, 0444, musb_ma_show, NULL);
+
+static ssize_t
+musb_charger_show(struct device *dev, struct device_attribute *attr, char *buf)
+{
+	struct musb	*musb = dev_to_musb(dev);
+	int		charger;
+
+	charger = otg_detect_charger(musb->xceiv);
+
+	return snprintf(buf, PAGE_SIZE, "%d\n", charger);
+}
+static DEVICE_ATTR(charger, 0444, musb_charger_show, NULL);
+
 #ifdef CONFIG_USB_GADGET_MUSB_HDRC
 
 /* Gadget drivers can't know that a host is connected so they might want
@@ -1744,6 +1765,8 @@ static DEVICE_ATTR(srp, 0644, NULL, musb
 static struct attribute *musb_attributes[] = {
 	&dev_attr_mode.attr,
 	&dev_attr_vbus.attr,
+	&dev_attr_mA.attr,
+	&dev_attr_charger.attr,
 #ifdef CONFIG_USB_GADGET_MUSB_HDRC
 	&dev_attr_srp.attr,
 #endif
@@ -1761,11 +1784,17 @@ static void musb_irq_work(struct work_st
 {
 	struct musb *musb = container_of(data, struct musb, irq_work);
 	static int old_state;
+	static int old_power_draw;
 
 	if (musb->xceiv->state != old_state) {
 		old_state = musb->xceiv->state;
 		sysfs_notify(&musb->controller->kobj, NULL, "mode");
 	}
+
+	if (musb->power_draw != old_power_draw) {
+		old_power_draw = musb->power_draw;
+		sysfs_notify(&musb->controller->kobj, NULL, "mA");
+	}
 }
 
 /* --------------------------------------------------------------------------
diff -rupN linux-2.6.34.orig/drivers/usb/musb/musb_core.h linux-2.6.34/drivers/usb/musb/musb_core.h
--- linux-2.6.34.orig/drivers/usb/musb/musb_core.h	2010-06-01 21:23:43.483350205 +0930
+++ linux-2.6.34/drivers/usb/musb/musb_core.h	2010-06-02 00:18:18.443358297 +0930
@@ -400,6 +400,8 @@ struct musb {
 
 	u8			min_power;	/* vbus for periph, in mA/2 */
 
+	unsigned		power_draw __deprecated; /* current power drawn, gadget only */
+
 	bool			is_host;
 
 	int			a_wait_bcon;	/* VBUS timeout in msecs */
diff -rupN linux-2.6.34.orig/drivers/usb/musb/musb_gadget.c linux-2.6.34/drivers/usb/musb/musb_gadget.c
--- linux-2.6.34.orig/drivers/usb/musb/musb_gadget.c	2010-06-01 21:23:43.487353472 +0930
+++ linux-2.6.34/drivers/usb/musb/musb_gadget.c	2010-06-02 00:18:18.451354850 +0930
@@ -1521,8 +1521,17 @@ static int musb_gadget_vbus_draw(struct 
 {
 	struct musb	*musb = gadget_to_musb(gadget);
 
+	/* REVISIT we shouldn't need to be passing
+	 * this kind of value to userland. We have
+	 * now the blocking notifier for transceivers
+	 * which could very well handle this
+	 */
+	musb->power_draw = mA;
+	schedule_work(&musb->irq_work);
+
 	if (!musb->xceiv->set_power)
 		return -EOPNOTSUPP;
+
 	return otg_set_power(musb->xceiv, mA);
 }
 
